/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package joystick;

import java.awt.event.KeyEvent;
import java.io.IOException;
import java.net.DatagramPacket;
import java.net.DatagramSocket;
import java.net.InetAddress;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.KeyStroke;

/**
 *
 * @author JCMBBH-74
 */
public class TelaControle extends javax.swing.JFrame {
    
    DatagramSocket socket = null, socketLocal = null;
    String sai;
    int speed;
    String direction;
    
    InetAddress host = null, hostLocal = null; 
    int port; 

    /**
     * Creates new form TelaControle
     */
    public TelaControle() {
        initComponents();
        
        speed = 40; 
        direction = "up";
        
        // Convert the arguments first, to ensure that they are valid
        try 
        {
        	/* PUT HERE THE RPi ADDRESS
        	 * host = InetAddress.getByName("IP_ADDRESS");
        	 */
            hostLocal = InetAddress.getByName("127.0.0.1");
//            host = InetAddress.getByName("172.20.10.13");
            host = InetAddress.getByName("192.168.0.7");
        } 
        catch (UnknownHostException ex) 
        {
            Logger.getLogger(TelaControle.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        port = Integer.parseInt("5005");
        
        // Construct the socket
        try 
        {
            socket = new DatagramSocket();
            socketLocal = new DatagramSocket();
        } 
        catch (SocketException ex) 
        {
            Logger.getLogger(TelaControle.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        rightButton = new javax.swing.JButton();
        buttonStop = new javax.swing.JButton();
        leftButton = new javax.swing.JButton();
        forwardButton = new javax.swing.JButton();
        slowDownButton = new javax.swing.JButton();
        speedUoButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        rightButton.setMnemonic('d');
        rightButton.setText("Right");
        rightButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rightButtonActionPerformed(evt);
            }
        });

        buttonStop.setMnemonic('s');
        buttonStop.setText("Stop");
        buttonStop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonStopActionPerformed(evt);
            }
        });

        leftButton.setMnemonic('a');
        leftButton.setText("Left");
        leftButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                leftButtonActionPerformed(evt);
            }
        });

        forwardButton.setMnemonic('u');
        forwardButton.setText("Up");
        forwardButton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        forwardButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                forwardButtonActionPerformed(evt);
            }
        });
        forwardButton.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                forwardButtonKeyPressed(evt);
            }
        });

        slowDownButton.setText("Slow Down");
        slowDownButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                slowDownButtonActionPerformed(evt);
            }
        });

        speedUoButton.setText("Speed Up");
        speedUoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                speedUoButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(slowDownButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(139, 139, 139)
                        .addComponent(leftButton, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rightButton, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(speedUoButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(50, 50, 50)
                        .addComponent(buttonStop, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(61, 61, 61)
                        .addComponent(forwardButton, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonStop, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(speedUoButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(forwardButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(slowDownButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(leftButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rightButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void forwardButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_forwardButtonActionPerformed
        direction = "up";
        
        String input;
        
        input = direction+" "+speed;
        
        byte[] data = input.getBytes();
        DatagramPacket packet = new DatagramPacket(data, data.length, host, port);
        
        DatagramPacket packetLocal = new DatagramPacket(data, data.length, hostLocal, port);
        
        try 
        {
            // Send it
            socket.send(packet);
        
            socketLocal.send(packetLocal);
        } 
        catch (IOException ex) 
        {
            Logger.getLogger(TelaControle.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        System.out.println(speed);
    }//GEN-LAST:event_forwardButtonActionPerformed

    private void speedUoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_speedUoButtonActionPerformed
        speed = speed + 10;
        
        String input;
        
        if(speed>=100)
        {
            speed = 100;
        }
        
        input = direction+" "+speed;
        
        byte[] data = input.getBytes();
        DatagramPacket packet = new DatagramPacket(data, data.length, host, port);
        
        try 
        {
            // Send it
            socket.send(packet);
        } 
        catch (IOException ex) 
        {
            Logger.getLogger(TelaControle.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        System.out.println(speed);
    }//GEN-LAST:event_speedUoButtonActionPerformed

    private void slowDownButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_slowDownButtonActionPerformed
        speed = speed - 10;
        
        String input;
        
        if(speed<=40)
        {
            speed = 40;
        }
        
        input = direction+" "+speed;
        
        byte[] data = input.getBytes();
        DatagramPacket packet = new DatagramPacket(data, data.length, host, port);
        
        try 
        {
            // Send it
            socket.send(packet);
        } 
        catch (IOException ex) 
        {
            Logger.getLogger(TelaControle.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        System.out.println(speed);
    }//GEN-LAST:event_slowDownButtonActionPerformed

    private void leftButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_leftButtonActionPerformed
        direction = "left";
        
        String input;
        
        input = direction+" "+speed;
        
        byte[] data = input.getBytes();
        DatagramPacket packet = new DatagramPacket(data, data.length, host, port);
        
        DatagramPacket packetLocal = new DatagramPacket(data, data.length, hostLocal, port);
        
        try 
        {
            // Send it
            socket.send(packet);
        
            socketLocal.send(packetLocal);
        } 
        catch (IOException ex) 
        {
            Logger.getLogger(TelaControle.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        System.out.println(speed);
    }//GEN-LAST:event_leftButtonActionPerformed

    private void rightButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rightButtonActionPerformed
        direction = "right";
        
        String input;
        
        input = direction+" "+speed;
        
        byte[] data = input.getBytes();
        DatagramPacket packet = new DatagramPacket(data, data.length, host, port);
            
        DatagramPacket packetLocal = new DatagramPacket(data, data.length, hostLocal, port);
        
        try 
        {
            // Send it
            socket.send(packet);
            
            socketLocal.send(packetLocal);
        } 
        catch (IOException ex) 
        {
            Logger.getLogger(TelaControle.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        System.out.println(speed);
    }//GEN-LAST:event_rightButtonActionPerformed

    private void buttonStopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonStopActionPerformed
        String input;
        
        input = "stop 00";
        
        byte[] data = input.getBytes();
        DatagramPacket packet = new DatagramPacket(data, data.length, host, port);
            
        try 
        {
            // Send it
            socket.send(packet);
        } 
        catch (IOException ex) 
        {
            Logger.getLogger(TelaControle.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_buttonStopActionPerformed

    private void forwardButtonKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_forwardButtonKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_forwardButtonKeyPressed
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaControle.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaControle.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaControle.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaControle.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaControle().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonStop;
    private javax.swing.JButton forwardButton;
    private javax.swing.JButton leftButton;
    private javax.swing.JButton rightButton;
    private javax.swing.JButton slowDownButton;
    private javax.swing.JButton speedUoButton;
    // End of variables declaration//GEN-END:variables
}
